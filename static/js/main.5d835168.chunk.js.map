{"version":3,"sources":["firebase.js","Stock.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Stock","handleCounter","props","cartList","setState","stock","state","className","key","this","galleryObject","onClick","src","data","image","alt","title","price","Component","App","galleryItems","cart","push","handleRemove","mapIndex","updatedCart","filter","item","i","gallery","database","ref","on","response","console","log","val","newState","href","map","length","cartItem","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.5d835168.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/database';\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAwCMbdEPHrXJ1ozNo_J9sdpV6HYtzcqNw\",\n    authDomain: \"rugged-footprints-shop.firebaseapp.com\",\n    databaseURL: \"https://rugged-footprints-shop.firebaseio.com\",\n    projectId: \"rugged-footprints-shop\",\n    storageBucket: \"rugged-footprints-shop.appspot.com\",\n    messagingSenderId: \"562935868864\",\n    appId: \"1:562935868864:web:cf408414063475977aec25\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;","import React, { Component } from \"react\";\n\nexport class Stock extends Component {\n  constructor() {\n    super();\n    this.state = {\n      stock: 10,\n    };\n  }\n\n    handleCounter = () => {\n    this.props.cartList();\n    \n    this.setState({\n      stock: this.state.stock - 1,\n    });\n  };\n    \n    \n  render() {\n    return (\n      <div className=\"galleryItem\">\n        <li key={this.props.galleryObject.key}>\n          <button onClick={this.handleCounter}>\n            <img src={this.props.galleryObject.data.image} alt=\"\" />\n          </button>\n          <h3>{this.props.galleryObject.data.title}</h3> {/*title*/}\n          <h4>Price: {this.props.galleryObject.data.price}</h4> {/*price*/}\n          <p>Prints Available: {this.state.stock}</p> {/*prints in stock*/}\n          {/* <button onClick={this.handleCounter}>Add to Cart</button> */}\n        </li>\n\n      </div>\n    );\n  }\n}\n\nexport default Stock;","import React, { Component } from 'react';\nimport firebase from './firebase.js';\nimport './App.css';\nimport Stock from './Stock.js';\n\n\nexport class App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      gallery: [],\n      cart: [],\n    }\n  }\n\n  componentDidMount() {\n    const dbRef = firebase.database().ref();\n\n    dbRef.on(\"value\", (response) => {\n      console.log(response.val());\n\n      const newState = [];\n      const data = response.val();\n\n      for (const key in data) {\n        newState.push({\n          key: key,\n          data: data[key]\n        });\n      }\n\n      this.setState({\n        gallery: newState,\n      });\n    });\n  }\n\n// update cart list\n  cartList = galleryObject => {\n    // created new array \n    const galleryItems = [...this.state.cart];\n    galleryItems.push(galleryObject);\n\n    this.setState({\n      cart: galleryItems,\n    });\n  }\n\n// remove function for shopping cart list\n  handleRemove = mapIndex => {\n    const cartList = [...this.state.cart];\n    const updatedCart = cartList.filter((item, i) => i !== mapIndex);\n    this.setState({\n      cart: updatedCart,\n    })\n  }\n\n  \n  render() {\n    return (\n      <div className=\"App\">\n        {/* header */}\n        <header>\n          <nav>\n            <div className=\"wrapper nav\">\n              <ul>\n                <li>\n                  <a href=\"https://www.ruggedfootprints.com/category/travel/\">\n                    // Travel Blog\n                  </a>\n                </li>\n              </ul>\n              <a href=\"https://www.instagram.com/ruggedfootprints/\">\n                <i className=\"fab fa-instagram\"></i>{\" \"}\n              </a>\n            </div>\n          </nav>\n\n          <div className=\"heroContainer wrapper\">\n            <h1>Rugged // Footprints Shop</h1>\n            <h2>Photography by Sakib I.</h2>\n            <p>\n              Mid-20s, currently lives in Silicon Valley, California but raised\n              in Scarborough/Toronto, ON, Canada. By occupation is a hardware\n              engineer. Avid traveller, advocate of health & fitness,\n              photography noobie.\n            </p>\n          </div>\n        </header>\n\n      {/* main */}\n        <main className=\"wrapper\">\n          {/* photo gallery */}\n          <ul className=\"gallery\">\n            {this.state.gallery.map((galleryObject) => {\n              return (\n                // prints available counter\n                <Stock\n                  galleryObject={galleryObject}\n                  cartList={() => this.cartList(galleryObject)}\n                />\n              );\n            })}\n          </ul>\n\n            {/* shopping cart item counter */}\n          {this.state.cart.length > 0 ? (\n            <div className=\"shoppingCart\">\n              <h3>Shopping Cart</h3>\n              <p><i className=\"fas fa-shopping-cart\"></i>{this.state.cart.length}</p>\n\n            {/* importing selected gallery items into shopping cart list */}\n              {this.state.cart.map((cartItem, mapIndex) => {\n                return (\n                  <li>\n                    <img src={cartItem.data.image} alt={cartItem.data.title} />\n                    <div className=\"photoInfo\">\n                      <h5>{cartItem.data.title}</h5> {/*title*/}\n                      <p>Price: {cartItem.data.price}</p> {/*price*/}\n                    </div>\n\n                    {/* remove button to remove items from shopping list */}\n                      <button className=\"trash\" onClick={() => this.handleRemove(mapIndex)} >\n                          <i className=\"fas fa-trash\"></i>\n                      </button>\n                      \n                  </li>\n                );\n              })}\n              \n              <button>Submit Order</button>\n            </div>\n          ) : (\n            <p className=\"placeHolder\"></p>\n            )}\n        </main>\n\n        <footer>\n          <p>Original Photographs by Sakib.I - Rugged // Footprints</p>\n          <p>Created by Baljit Sokhi at Juno College</p>\n        </footer>\n      </div>\n    );}\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}